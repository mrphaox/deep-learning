{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"p1t4 Árbol- clasificación ","provenance":[],"collapsed_sections":[],"authorship_tag":"ABX9TyOWJ1bhJifSVSv9vfscsH9B"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":1,"metadata":{"id":"V2e0lgV8mTnT","executionInfo":{"status":"ok","timestamp":1646492565590,"user_tz":300,"elapsed":1545,"user":{"displayName":"Oscar Alberto Neira Vaca","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgmeconwG82jKoluXxAoLlpFKRDz8LDi_KIBc3oYg=s64","userId":"04483686456598883065"}}},"outputs":[],"source":["import numpy as np\n","import pandas as pd \n","\n","import matplotlib.pyplot as plt\n","from sklearn.model_selection import train_test_split  #separar los datos (train y test)\n","from sklearn.tree import DecisionTreeClassifier       #clase que arboles de desición\n","from sklearn.datasets import load_iris "]},{"cell_type":"code","source":["db_iris = load_iris(); "],"metadata":{"id":"lh65MOQdmtDn","executionInfo":{"status":"ok","timestamp":1646492938341,"user_tz":300,"elapsed":199,"user":{"displayName":"Oscar Alberto Neira Vaca","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgmeconwG82jKoluXxAoLlpFKRDz8LDi_KIBc3oYg=s64","userId":"04483686456598883065"}}},"execution_count":2,"outputs":[]},{"cell_type":"code","source":["#visualizando la descripción\n","print(db_iris.DESCR)\n","print(db_iris.target)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ifn5KhNDoHsH","executionInfo":{"status":"ok","timestamp":1646492983183,"user_tz":300,"elapsed":205,"user":{"displayName":"Oscar Alberto Neira Vaca","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgmeconwG82jKoluXxAoLlpFKRDz8LDi_KIBc3oYg=s64","userId":"04483686456598883065"}},"outputId":"47b90d07-5da4-4c19-b4c6-68f61504cfc6"},"execution_count":3,"outputs":[{"output_type":"stream","name":"stdout","text":[".. _iris_dataset:\n","\n","Iris plants dataset\n","--------------------\n","\n","**Data Set Characteristics:**\n","\n","    :Number of Instances: 150 (50 in each of three classes)\n","    :Number of Attributes: 4 numeric, predictive attributes and the class\n","    :Attribute Information:\n","        - sepal length in cm\n","        - sepal width in cm\n","        - petal length in cm\n","        - petal width in cm\n","        - class:\n","                - Iris-Setosa\n","                - Iris-Versicolour\n","                - Iris-Virginica\n","                \n","    :Summary Statistics:\n","\n","    ============== ==== ==== ======= ===== ====================\n","                    Min  Max   Mean    SD   Class Correlation\n","    ============== ==== ==== ======= ===== ====================\n","    sepal length:   4.3  7.9   5.84   0.83    0.7826\n","    sepal width:    2.0  4.4   3.05   0.43   -0.4194\n","    petal length:   1.0  6.9   3.76   1.76    0.9490  (high!)\n","    petal width:    0.1  2.5   1.20   0.76    0.9565  (high!)\n","    ============== ==== ==== ======= ===== ====================\n","\n","    :Missing Attribute Values: None\n","    :Class Distribution: 33.3% for each of 3 classes.\n","    :Creator: R.A. Fisher\n","    :Donor: Michael Marshall (MARSHALL%PLU@io.arc.nasa.gov)\n","    :Date: July, 1988\n","\n","The famous Iris database, first used by Sir R.A. Fisher. The dataset is taken\n","from Fisher's paper. Note that it's the same as in R, but not as in the UCI\n","Machine Learning Repository, which has two wrong data points.\n","\n","This is perhaps the best known database to be found in the\n","pattern recognition literature.  Fisher's paper is a classic in the field and\n","is referenced frequently to this day.  (See Duda & Hart, for example.)  The\n","data set contains 3 classes of 50 instances each, where each class refers to a\n","type of iris plant.  One class is linearly separable from the other 2; the\n","latter are NOT linearly separable from each other.\n","\n",".. topic:: References\n","\n","   - Fisher, R.A. \"The use of multiple measurements in taxonomic problems\"\n","     Annual Eugenics, 7, Part II, 179-188 (1936); also in \"Contributions to\n","     Mathematical Statistics\" (John Wiley, NY, 1950).\n","   - Duda, R.O., & Hart, P.E. (1973) Pattern Classification and Scene Analysis.\n","     (Q327.D83) John Wiley & Sons.  ISBN 0-471-22361-1.  See page 218.\n","   - Dasarathy, B.V. (1980) \"Nosing Around the Neighborhood: A New System\n","     Structure and Classification Rule for Recognition in Partially Exposed\n","     Environments\".  IEEE Transactions on Pattern Analysis and Machine\n","     Intelligence, Vol. PAMI-2, No. 1, 67-71.\n","   - Gates, G.W. (1972) \"The Reduced Nearest Neighbor Rule\".  IEEE Transactions\n","     on Information Theory, May 1972, 431-433.\n","   - See also: 1988 MLC Proceedings, 54-64.  Cheeseman et al\"s AUTOCLASS II\n","     conceptual clustering system finds 3 classes in the data.\n","   - Many, many more ...\n","[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n"," 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n"," 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2 2 2 2 2 2 2 2 2 2 2\n"," 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\n"," 2 2]\n"]}]},{"cell_type":"code","source":["df_iris= pd.DataFrame(db_iris.data, columns=db_iris.feature_names)\n","df_iris['target']=db_iris.target\n","df_iris.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":215},"id":"h8rurrp-oTGn","executionInfo":{"status":"ok","timestamp":1646493042696,"user_tz":300,"elapsed":195,"user":{"displayName":"Oscar Alberto Neira Vaca","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgmeconwG82jKoluXxAoLlpFKRDz8LDi_KIBc3oYg=s64","userId":"04483686456598883065"}},"outputId":"64c7eb42-c6ca-4446-d380-ff61b2ae7fe2"},"execution_count":4,"outputs":[{"output_type":"execute_result","data":{"text/html":["\n","  <div id=\"df-9f34b6b7-b917-4195-a204-230dc0f62599\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>sepal length (cm)</th>\n","      <th>sepal width (cm)</th>\n","      <th>petal length (cm)</th>\n","      <th>petal width (cm)</th>\n","      <th>target</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>5.1</td>\n","      <td>3.5</td>\n","      <td>1.4</td>\n","      <td>0.2</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>4.9</td>\n","      <td>3.0</td>\n","      <td>1.4</td>\n","      <td>0.2</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>4.7</td>\n","      <td>3.2</td>\n","      <td>1.3</td>\n","      <td>0.2</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>4.6</td>\n","      <td>3.1</td>\n","      <td>1.5</td>\n","      <td>0.2</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>5.0</td>\n","      <td>3.6</td>\n","      <td>1.4</td>\n","      <td>0.2</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-9f34b6b7-b917-4195-a204-230dc0f62599')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-9f34b6b7-b917-4195-a204-230dc0f62599 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-9f34b6b7-b917-4195-a204-230dc0f62599');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "],"text/plain":["   sepal length (cm)  sepal width (cm)  petal length (cm)  petal width (cm)  \\\n","0                5.1               3.5                1.4               0.2   \n","1                4.9               3.0                1.4               0.2   \n","2                4.7               3.2                1.3               0.2   \n","3                4.6               3.1                1.5               0.2   \n","4                5.0               3.6                1.4               0.2   \n","\n","   target  \n","0       0  \n","1       0  \n","2       0  \n","3       0  \n","4       0  "]},"metadata":{},"execution_count":4}]},{"cell_type":"code","source":["# split (75%- train , 25%-test),test_size=0.4 (60%-train, 40%-test)\n","X_train, X_test, Y_train, Y_test = train_test_split(df_iris[db_iris.feature_names],df_iris['target'], random_state=4)"],"metadata":{"id":"Z6RjBVl8olHw","executionInfo":{"status":"ok","timestamp":1646494383099,"user_tz":300,"elapsed":201,"user":{"displayName":"Oscar Alberto Neira Vaca","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgmeconwG82jKoluXxAoLlpFKRDz8LDi_KIBc3oYg=s64","userId":"04483686456598883065"}}},"execution_count":14,"outputs":[]},{"cell_type":"code","source":["arbol = DecisionTreeClassifier(max_depth=3, random_state=0)"],"metadata":{"id":"cnsIC2fHsRlB","executionInfo":{"status":"ok","timestamp":1646494384364,"user_tz":300,"elapsed":213,"user":{"displayName":"Oscar Alberto Neira Vaca","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgmeconwG82jKoluXxAoLlpFKRDz8LDi_KIBc3oYg=s64","userId":"04483686456598883065"}}},"execution_count":15,"outputs":[]},{"cell_type":"code","source":["arbol.fit(X_train, Y_train)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"9IeymuujrX0R","executionInfo":{"status":"ok","timestamp":1646494385281,"user_tz":300,"elapsed":3,"user":{"displayName":"Oscar Alberto Neira Vaca","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgmeconwG82jKoluXxAoLlpFKRDz8LDi_KIBc3oYg=s64","userId":"04483686456598883065"}},"outputId":"e4db29c4-a80c-464d-f3e9-0fdf9d9e415c"},"execution_count":16,"outputs":[{"output_type":"execute_result","data":{"text/plain":["DecisionTreeClassifier(max_depth=3, random_state=0)"]},"metadata":{},"execution_count":16}]},{"cell_type":"code","source":["print(X_test.iloc[0:10])\n","print(Y_test.iloc[0:10])\n","#arbol.predict(X_test.iloc[0:10].values.reshape(1,-1))\n","arbol.predict(X_test.iloc[0:10])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"XpYLktbpsY3w","executionInfo":{"status":"ok","timestamp":1646494386680,"user_tz":300,"elapsed":2,"user":{"displayName":"Oscar Alberto Neira Vaca","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgmeconwG82jKoluXxAoLlpFKRDz8LDi_KIBc3oYg=s64","userId":"04483686456598883065"}},"outputId":"a3b9b40e-0df8-434b-a288-0dc87069a4c5"},"execution_count":17,"outputs":[{"output_type":"stream","name":"stdout","text":["     sepal length (cm)  sepal width (cm)  petal length (cm)  petal width (cm)\n","128                6.4               2.8                5.6               2.1\n","18                 5.7               3.8                1.7               0.3\n","130                7.4               2.8                6.1               1.9\n","105                7.6               3.0                6.6               2.1\n","107                7.3               2.9                6.3               1.8\n","78                 6.0               2.9                4.5               1.5\n","83                 6.0               2.7                5.1               1.6\n","14                 5.8               4.0                1.2               0.2\n","5                  5.4               3.9                1.7               0.4\n","133                6.3               2.8                5.1               1.5\n","128    2\n","18     0\n","130    2\n","105    2\n","107    2\n","78     1\n","83     1\n","14     0\n","5      0\n","133    2\n","Name: target, dtype: int64\n"]},{"output_type":"execute_result","data":{"text/plain":["array([2, 0, 2, 2, 2, 1, 2, 0, 0, 2])"]},"metadata":{},"execution_count":17}]},{"cell_type":"code","source":["accuracy= arbol.score(X_test,Y_test)\n","print(accuracy)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"q5rzbhlpsZXQ","executionInfo":{"status":"ok","timestamp":1646494392565,"user_tz":300,"elapsed":243,"user":{"displayName":"Oscar Alberto Neira Vaca","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgmeconwG82jKoluXxAoLlpFKRDz8LDi_KIBc3oYg=s64","userId":"04483686456598883065"}},"outputId":"a0d324dd-f71f-49b5-e655-aa6b7d8d370b"},"execution_count":18,"outputs":[{"output_type":"stream","name":"stdout","text":["0.9736842105263158\n"]}]},{"cell_type":"code","source":["#0-setosa , 1-versicolor, 2-virginica\n","class_name_list= list(['setosa','versicolor','verginica'])\n","from sklearn.tree import export_graphviz\n","from pydotplus import graph_from_dot_data\n","dot_data = export_graphviz(arbol, feature_names=db_iris.feature_names, class_names=class_name_list)\n","grafico = graph_from_dot_data(dot_data)\n","grafico.write_png('arbol_iris.png')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"UCRyqNPks-vY","executionInfo":{"status":"ok","timestamp":1646494394034,"user_tz":300,"elapsed":239,"user":{"displayName":"Oscar Alberto Neira Vaca","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgmeconwG82jKoluXxAoLlpFKRDz8LDi_KIBc3oYg=s64","userId":"04483686456598883065"}},"outputId":"d0647a8a-9904-421b-b212-e6c79f82003c"},"execution_count":19,"outputs":[{"output_type":"execute_result","data":{"text/plain":["True"]},"metadata":{},"execution_count":19}]},{"cell_type":"code","source":["df_importancia = pd.DataFrame({'caracteristica':X_train.columns,'Importancia':arbol.feature_importances_})\n","df_importancia= df_importancia.sort_values('Importancia',ascending=False)\n","df_importancia.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":175},"id":"u-bkJLsdtgbw","executionInfo":{"status":"ok","timestamp":1646494396258,"user_tz":300,"elapsed":8,"user":{"displayName":"Oscar Alberto Neira Vaca","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgmeconwG82jKoluXxAoLlpFKRDz8LDi_KIBc3oYg=s64","userId":"04483686456598883065"}},"outputId":"17933536-7675-4ed7-95a6-89b04a5facb0"},"execution_count":20,"outputs":[{"output_type":"execute_result","data":{"text/html":["\n","  <div id=\"df-812f1e58-af34-40e0-a9d1-e68b174113cc\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>caracteristica</th>\n","      <th>Importancia</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>3</th>\n","      <td>petal width (cm)</td>\n","      <td>0.935947</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>petal length (cm)</td>\n","      <td>0.064053</td>\n","    </tr>\n","    <tr>\n","      <th>0</th>\n","      <td>sepal length (cm)</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>sepal width (cm)</td>\n","      <td>0.000000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-812f1e58-af34-40e0-a9d1-e68b174113cc')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-812f1e58-af34-40e0-a9d1-e68b174113cc button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-812f1e58-af34-40e0-a9d1-e68b174113cc');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "],"text/plain":["      caracteristica  Importancia\n","3   petal width (cm)     0.935947\n","2  petal length (cm)     0.064053\n","0  sepal length (cm)     0.000000\n","1   sepal width (cm)     0.000000"]},"metadata":{},"execution_count":20}]},{"cell_type":"code","source":["#lista_de_profundidades (1-6)\n","depth_list = list(range(1,6))\n","#vector de accuracy\n","accuracy_list=[]\n","for depth in depth_list:\n","  arbol = DecisionTreeClassifier(max_depth=depth,random_state=42)\n","  arbol.fit(X_train,Y_train)\n","  score= arbol.score(X_test,Y_test)\n","  accuracy_list.append(score)"],"metadata":{"id":"qKw9o19btrdC","executionInfo":{"status":"ok","timestamp":1646494421200,"user_tz":300,"elapsed":207,"user":{"displayName":"Oscar Alberto Neira Vaca","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgmeconwG82jKoluXxAoLlpFKRDz8LDi_KIBc3oYg=s64","userId":"04483686456598883065"}}},"execution_count":21,"outputs":[]},{"cell_type":"code","source":["plt.plot (depth_list, accuracy_list)\n","plt.ylabel('accuracy')\n","plt.xlabel('depth')\n","plt.grid(True)\n","plt.show"],"metadata":{"id":"ycEcsbBetzpo","executionInfo":{"status":"ok","timestamp":1646494435017,"user_tz":300,"elapsed":450,"user":{"displayName":"Oscar Alberto Neira Vaca","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgmeconwG82jKoluXxAoLlpFKRDz8LDi_KIBc3oYg=s64","userId":"04483686456598883065"}},"outputId":"ab112b7b-f6bf-4172-8230-6352d27e9695","colab":{"base_uri":"https://localhost:8080/","height":296}},"execution_count":22,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<function matplotlib.pyplot.show>"]},"metadata":{},"execution_count":22},{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"needs_background":"light"}}]}]}